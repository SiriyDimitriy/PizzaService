<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:beans="http://www.springframework.org/schema/beans"

             xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
">

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/app/admin/**" access="hasRole('ROLE_ADMIN')" />	
        <intercept-url pattern="/app/customer/**" access="hasRole('ROLE_CUSTOMER')" />
        <intercept-url pattern="/app/pizza/**" access="permitAll" />
        <intercept-url pattern="/app/order/**" access="permitAll"  />
        <intercept-url pattern="/app/signin" access="permitAll"  />
               
        <form-login login-page="/app/signin"
                    login-processing-url="/app/login"
                    authentication-success-handler-ref="authenticationSuccessHandler"
                    authentication-failure-url="/app/signin?login_error"/> 
        <logout logout-url="/app/logout" invalidate-session="true" logout-success-url="/app/signin" />
<!--        <remember-me/>-->
    </http>
    
    <beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="useReferer" value="true" />
    </beans:bean>
  
    <authentication-manager alias="authenticationManager" >
<!--        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource" 
                               users-by-username-query=
            "select username, password, availability from public.account where username=?;"
                               authorities-by-username-query=
            "select a.username,ur.rolename from public.account as a, public.userrole as ur, public.userrole_account as ua where  a.id = ua.account_id and ur.id = ua.userrole_id and username=?;"
            />
        </authentication-provider>-->
        <authentication-provider ref="jpaAuthProvider"/>
    </authentication-manager>
    
    <beans:bean name="jpaAuthProvider" class="anna.pizzadeliveryservice.security.JpaAuthProvider"/>

</beans:beans>